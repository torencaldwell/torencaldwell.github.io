{"version":3,"sources":["assets/IMG_3351.jpg","theme/colors.js","components/ParallaxHeader/ParallaxHeader.style.js","localization/en.js","localization/index.js","links/links.js","components/ParallaxHeader/ParallaxHeader.js","links/index.js","sections/About/About.js","sections/Contact/Contact.js","sections/Projects/Projects.js","sections/Resume/Resume.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","colors","Style","parallaxHeader","width","headerBackground","alignItems","display","justifyContent","headerContent","flexDirection","height","position","zIndex","headerLinksContainer","link","textAlign","color","linkHover","cursor","nameContainer","padding","name","fontSize","verticalRule","borderLeft","marginLeft","marginRight","english","header","about","contact","projects","resume","strings","key","_","get","undefined","linksList","linkedIn","headerImageSize","HeaderLink","id","children","useState","linkStyle","setLinkStyle","element","document","getElementById","style","onMouseEnter","onMouseLeave","onClick","scrollIntoView","behavior","ParallaxHeader","headerBlur","setHeaderBlur","headerSize","setHeaderSize","onWindowResize","imgAspect","winAspect","window","innerHeight","innerWidth","useEffect","onScroll","scrollY","addEventListener","removeEventListener","src","require","onLoad","image","target","offsetHeight","offsetWidth","filter","transform","href","baseColor","text","enterColors","interval","duration","textStyle","About","Contact","Projects","Resume","App","className","backgroundColor","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"yKAAAA,EAAOC,QAAU,IAA0B,sC,oGCA7BC,EASa,UATbA,EAWa,UAXbA,EAea,UAfbA,EA2Ba,UCsBZC,EA/CD,CACVC,eAAgB,CACZC,MAAO,QAEXC,iBAAkB,CACdC,WAAY,SACZC,QAAS,OACTC,eAAgB,UAEpBC,cAAe,CACXF,QAAS,OACTG,cAAe,MACfC,OAAQ,QACRC,SAAU,QACVC,OAAQ,GAEZC,qBAAsB,CAClBP,QAAS,OACTG,cAAe,SACfC,OAAQ,OACRH,eAAgB,UAEpBO,KAAM,CACFC,UAAW,OACXC,MAAOhB,GAEXiB,UAAW,CACPF,UAAW,OACXG,OAAQ,UACRF,MDRmB,WCUvBG,cAAe,CACXd,WAAY,SACZC,QAAS,OACTc,QAAS,oBAEbC,KAAM,CACFC,SAAU,IAEdC,aAAc,CACVC,WAAW,aAAD,OAAgBxB,GAC1ByB,WAAY,OACZC,YAAa,OACbhB,OAAQ,S,gBC7CHiB,EAAU,CACnBC,OAAQ,CACJC,MAAO,WACPC,QAAS,UACTT,KAAM,iBACNU,SAAU,WACVC,OAAQ,iBCHHC,EAAU,SAAAC,GAAG,OAAIC,IAAEC,IAAIT,EAASO,OAAKG,ICHrCC,EAAY,CACrBC,SAAU,wD,OCMVC,EAAkB,CAClB9B,OAAQ,EACRP,MAAO,GAGLsC,EAAa,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAAe,EACHC,mBAAS3C,EAAMa,MADZ,mBAC9B+B,EAD8B,KACnBC,EADmB,KAE/BC,EAAUC,SAASC,eAAeP,GAExC,OACI,uBACIQ,MAAQL,EACRM,aAAe,kBAAML,EAAa7C,EAAMgB,YACxCmC,aAAe,kBAAMN,EAAa7C,EAAMa,OACxCuC,QAAU,kBAAMN,EAAQO,eAAe,CAAEC,SAAU,aAElDZ,IAKAa,EAAiB,WAAO,ICzBhBtB,EDyBe,EACIU,mBAAS,GADb,mBACzBa,EADyB,KACbC,EADa,OAEId,mBAAS,CAAC,OAAQ,SAFtB,mBAEzBe,EAFyB,KAEbC,EAFa,KAY1BC,EAAiB,WACnB,IAAMC,EAAYtB,EAAgB9B,OAAS8B,EAAgBrC,MACrD4D,EAAYC,OAAOC,YAAcD,OAAOE,WAG1CN,EADAE,GAAaC,EACC,CAAC,OAAQ,QAET,CAAC,OAAQ,UAgB/B,OAZAI,qBAAU,WACN,IAAMC,EAAW,kBAAMV,EAAeM,OAAOK,QAAU,MAKvD,OAHAL,OAAOM,iBAAiB,SAAUF,GAClCJ,OAAOM,iBAAiB,SAAUT,GAE3B,WACHG,OAAOO,oBAAoB,SAAUH,GACrCJ,OAAOO,oBAAoB,SAAUV,OAKzC,yBAAKX,MAAK,2BAAOjD,EAAMG,kBAAb,IAA+BM,OAAQsD,OAAOC,eACpD,yBACIO,IAAMC,EAAQ,IACdC,OAnCY,SAAC,GAAqB,IAAZC,EAAW,EAAnBC,OACtBpC,EAAkB,CACd9B,OAAQiE,EAAME,aACd1E,MAAOwE,EAAMG,aAEjBjB,KA+BQX,MAAO,CACHxC,OAAQiD,EAAW,GACnBoB,OAAO,QAAD,OAAUtB,EAAV,OACN9C,SAAU,QACVqE,UAAW,kBACX7E,MAAOwD,EAAW,GAClB/C,OAAQ,KAGhB,yBACIsC,MAAK,2BACEjD,EAAMO,eADR,IAEDwE,UAAU,eAAD,OAAiBhB,OAAOK,QAAU,EAAlC,UAGb,yBAAKnB,MAAQjD,EAAMkB,eACf,uBAAG8D,MCjFF/C,EDiFe,WCjFRC,IAAEC,IAAIE,EAAWJ,OAAKG,KDkF1B,kBAAC,aAAD,CACI6C,UAAYlF,EACZmF,KAAOlD,EAAQ,eACfmD,YAAa,CACTpF,EACAA,EACAA,GAEJqF,SAAW,IACXC,SAAW,EACXC,UAAYtF,EAAMoB,SAI9B,yBAAK6B,MAAQjD,EAAMsB,eACnB,yBAAK2B,MAAQjD,EAAMY,sBACf,kBAAC,EAAD,CAAY6B,GAAG,SAAUT,EAAQ,iBACjC,kBAAC,EAAD,CAAYS,GAAG,YAAaT,EAAQ,oBACpC,kBAAC,EAAD,CAAYS,GAAG,UAAWT,EAAQ,kBAClC,kBAAC,EAAD,CAAYS,GAAG,WAAYT,EAAQ,uBErG1CuD,EAAQ,WACjB,OACI,yBAAK9C,GAAG,SACJ,4BAAMT,EAAQ,iBACd,mECLCwD,EAAU,WACnB,OACI,yBAAK/C,GAAG,WACJ,mDACA,8ECJCgD,EAAW,WACpB,OACI,yBAAKhD,GAAG,YACJ,6CACA,mECJCiD,EAAS,WAClB,OACI,yBAAKjD,GAAG,UACJ,sCACA,iECmBGkD,EAnBH,WACV,OACE,yBAAKC,UAAU,OACb,kBAAC,EAAD,MACA,yBAAK3C,MAAO,CACVxC,OAAO,SACPoF,gBAAiB9F,EACjBW,SAAU,WACVC,OAAQ,IAER,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,SCPYmF,QACW,cAA7B/B,OAAOgC,SAASC,UAEe,UAA7BjC,OAAOgC,SAASC,UAEhBjC,OAAOgC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFrD,SAASC,eAAe,SDyHpB,kBAAmBqD,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.40a7a507.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/IMG_3351.751c214b.jpg\";"," export const colors = {\n    black:                 '#000000',\n    grey100:               '#222222',\n    grey200:               '#444444',\n    grey300:               '#666666',\n    grey400:               '#888888',\n    grey500:               '#AAAAAA',\n    grey600:               '#CCCCCC',\n    grey700:               '#EEEEEE',\n    white:                 '#FFFFFF',\n\n    midnightBlue:          '#11111F',\n\n    primaryUltradark:      '#CF5046',\n    primaryDark:           '#CB392D',\n    primary:               '#E06C63',\n    primaryLight:          '#F4938B',\n    primaryUltralight:     '#FFB9B4',\n\n    secondaryUltradark:    '#A72567',\n    secondaryDark:         '#AA3A73',\n    secondary:             '#B85185',\n    secondaryLight:        '#C9729E',\n    secondaryUltralight:   '#D698B8',\n\n    tertiaryUltradark:     '#CB792D',\n    tertiaryDark:          '#CF8846',\n    tertiary:              '#E09F63',\n    tertiaryLight:         '#F4BD8B',\n    tertiaryUltralight:    '#FFD8B4'\n }","import { colors } from '../../theme/colors';\n\nconst Style = {\n    parallaxHeader: {\n        width: '100%',\n    },\n    headerBackground: {\n        alignItems: 'center',\n        display: 'flex',\n        justifyContent: 'center',\n    },\n    headerContent: {\n        display: 'flex',\n        flexDirection: 'row',\n        height: '200px',\n        position: 'fixed',\n        zIndex: 2,\n    },\n    headerLinksContainer: {\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        justifyContent: 'center',\n    },\n    link: {\n        textAlign: 'left',\n        color: colors.white,\n    },\n    linkHover: {\n        textAlign: 'left',\n        cursor: 'pointer',\n        color: colors.secondaryUltralight,\n    },\n    nameContainer: {\n        alignItems: 'center',\n        display: 'flex',\n        padding: '40px 5px 5px 5px',\n    },\n    name: {\n        fontSize: 50,\n    },\n    verticalRule: {\n        borderLeft: `2px solid ${ colors.white }`,\n        marginLeft: '40px',\n        marginRight: '40px',\n        height: '100%',\n    }\n};\n\nexport default Style;","export const english = {\n    header: {\n        about: 'About Me',\n        contact: 'Contact',\n        name: 'Toren Caldwell',\n        projects: 'Projects',\n        resume: 'Résumé',\n    },\n};\n","import _ from 'lodash';\nimport { english } from './en';\n\nexport const strings = key => _.get(english, key, undefined);","export const linksList = {\n    linkedIn: 'https://www.linkedin.com/in/toren-caldwell-5b2baab0/',\n}","import React, { useState, useEffect } from 'react';\nimport Style from './ParallaxHeader.style';\nimport { strings } from '../../localization';\nimport { links } from '../../links';\nimport { SplashText } from 'splash-text';\nimport { colors } from '../../theme/colors';\n\nvar headerImageSize = {\n    height: 0,\n    width: 0,\n};\n\nconst HeaderLink = ({ id, children }) => {\n    const [linkStyle, setLinkStyle] = useState(Style.link);\n    const element = document.getElementById(id);\n\n    return (\n        <p\n            style={ linkStyle }\n            onMouseEnter={ () => setLinkStyle(Style.linkHover) }\n            onMouseLeave={ () => setLinkStyle(Style.link) }\n            onClick={ () => element.scrollIntoView({ behavior: 'smooth' }) }\n        >\n            {children}\n        </p>\n    );\n};\n\nexport const ParallaxHeader = () => {\n    const [headerBlur, setHeaderBlur] = useState(0);\n    const [headerSize, setHeaderSize] = useState(['auto', 'auto']);\n\n    const onHeaderImgLoad = ({target: image}) => {\n        headerImageSize = {\n            height: image.offsetHeight,\n            width: image.offsetWidth,\n        };\n        onWindowResize();\n    };\n\n    const onWindowResize = () => {\n        const imgAspect = headerImageSize.height / headerImageSize.width;\n        const winAspect = window.innerHeight / window.innerWidth;\n\n        if (imgAspect <= winAspect) {\n            setHeaderSize(['100%', 'auto']);\n        } else {\n            setHeaderSize(['auto', '100%']);\n        }\n    }\n\n    useEffect(() => {\n        const onScroll = () => setHeaderBlur((window.scrollY / 200));\n\n        window.addEventListener('scroll', onScroll);\n        window.addEventListener('resize', onWindowResize);\n\n        return function cleanup() {\n            window.removeEventListener('scroll', onScroll);\n            window.removeEventListener('resize', onWindowResize);\n        };\n    });\n\n    return (\n        <div style={{ ...Style.headerBackground, height: window.innerHeight }}>\n            <img\n                src={ require('../../assets/IMG_3351.jpg') }\n                onLoad={ onHeaderImgLoad }\n                style={{\n                    height: headerSize[0],\n                    filter: `blur(${headerBlur}px)`,\n                    position: 'fixed',\n                    transform: 'translateY(200)',\n                    width: headerSize[1],\n                    zIndex: 1\n                }}\n            />\n            <div\n                style={{\n                    ...Style.headerContent,\n                    transform: `translateY(-${window.scrollY / 3}px)`\n                }}\n            >   \n                <div style={ Style.nameContainer } >\n                    <a href={ links('linkedIn') } >\n                        <SplashText\n                            baseColor={ colors.white }\n                            text={ strings('header.name') }\n                            enterColors={[\n                                colors.primary,\n                                colors.tertiary,\n                                colors.white,\n                            ]}\n                            interval={ 200 }\n                            duration={ 2 }\n                            textStyle={ Style.name }\n                        />\n                    </a>\n                </div>\n                <div style={ Style.verticalRule } />\n                <div style={ Style.headerLinksContainer }>\n                    <HeaderLink id='about'>{ strings('header.about') }</HeaderLink>\n                    <HeaderLink id='projects'>{ strings('header.projects') }</HeaderLink>\n                    <HeaderLink id='resume'>{ strings('header.resume') }</HeaderLink>\n                    <HeaderLink id='contact'>{ strings('header.contact') }</HeaderLink>\n                </div>\n            </div>\n        </div>\n    );\n}","import _ from 'lodash';\nimport { linksList } from './links';\n\nexport const links = key => _.get(linksList, key, undefined);","import React from 'react';\nimport { strings } from '../../localization';\n\nexport const About = () => {\n    return (\n        <div id='about'>\n            <h1>{ strings('header.about') }</h1>\n            <p>This is where the projects will go</p>\n        </div>\n    );\n}\n","import React from 'react';\n\nexport const Contact = () => {\n    return (\n        <div id='contact'>\n            <h1>Contact Information</h1>\n            <p>This is where the contact information will go</p>\n        </div>\n    );\n}\n","import React from 'react';\n\nexport const Projects = () => {\n    return (\n        <div id='projects'>\n            <h1>Demo Projects</h1>\n            <p>This is where the projects will go</p>\n        </div>\n    );\n}\n","import React from 'react';\n\nexport const Resume = () => {\n    return (\n        <div id='resume'>\n            <h1>Resume</h1>\n            <p>This is where the resume will go</p>\n        </div>\n    );\n}\n","import React from 'react';\nimport './App.css';\nimport { ParallaxHeader } from './components/ParallaxHeader';\nimport { Projects, Resume, Contact, About } from './sections';\nimport { colors } from './theme/colors';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <ParallaxHeader/>\n      <div style={{\n        height:'5000px',\n        backgroundColor: colors.midnightBlue,\n        position: 'relative',\n        zIndex: 2\n      }}>\n        <About />\n        <Projects />\n        <Resume />\n        <Contact />\n      </div>\n    </div> \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}